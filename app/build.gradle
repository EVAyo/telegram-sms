// For getting git information
static def getGitCommitId() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (e) {
        return "unknown-commit"
    }
}

static def getGitBranch() {
    try {
        return 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
    } catch (e) {
        return "unknown-branch"
    }
}

// Get the branch name before configuring Android, so we can use it directly later.
def currentBranch = getGitBranch()


apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
android {
    compileSdkVersion 36
    defaultConfig {
        applicationId 'com.qwe7002.telegram_sms'
        minSdkVersion 22
        //noinspection OldTargetApi
        targetSdk 34
        versionCode System.getenv("VERSION_CODE") == null ? 1 : System.getenv("VERSION_CODE").toInteger()
        versionName System.getenv("VERSION_NAME") == null ? "Debug" : System.getenv("VERSION_NAME").toString()
    }

    compileOptions {
        sourceCompatibility 17
        targetCompatibility 17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    androidResources {
        generateLocaleConfig true
    }

    signingConfigs {
        release {
            storeFile file("keys.jks")
            storePassword project.hasProperty("KEYSTORE_PASS") ? KEYSTORE_PASS : System.getenv("KEYSTORE_PASS")
            keyAlias project.hasProperty("ALIAS_NAME") ? ALIAS_NAME : System.getenv("ALIAS_NAME")
            keyPassword project.hasProperty("ALIAS_PASS") ? ALIAS_PASS : System.getenv("ALIAS_PASS")
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release
            ndk {
                //noinspection ChromeOsAbiSupport
                abiFilters "armeabi-v7a", "arm64-v8a"
            }

            // Centralized logic for release builds based on branch
            if (currentBranch == "nightly") {
                applicationIdSuffix ".nightly"
                resValue "string", "app_name", "Telegram SMS (Nightly)"
            }
            // For master branch, no suffix and default app name are used, so no 'else' is needed.
        }

        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", "Telegram SMS (Debug)"
        }
    }
    namespace 'com.qwe7002.telegram_sms'

    // Centralized output file naming logic
    applicationVariants.all { variant ->
        def commitId = getGitCommitId()
        variant.outputs.all { output ->
            if (variant.buildType.name == "release") {
                if (currentBranch == "nightly") {
                    // Your custom name for nightly release
                    output.outputFileName = "..//telegram-sms-nightly-${commitId}.apk"
                } else if (currentBranch == "master") {
                    // Your custom name for master release
                    output.outputFileName = "telegram-sms-${commitId}.apk"
                }
            } else if (variant.buildType.name == "debug") {
                // For debug builds, we might also want a commit ID!
                // Let's keep it simple as per your original file for now.
                // But using commitId here is also a good idea.
                if (currentBranch == "nightly") {
                    output.outputFileName = "../nightly/telegram-sms-nightly-debug.apk"
                } else { // Any other branch's debug build
                    output.outputFileName = "telegram-sms-debug.apk"
                }
            }
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.browser:browser:1.8.0'
    implementation 'com.squareup.okio:okio:3.9.1'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.14'
    implementation 'com.squareup.okhttp3:okhttp-dnsoverhttps:5.0.0-alpha.14'
    implementation 'org.conscrypt:conscrypt-android:2.5.3'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'io.github.pilgr:paperdb:2.7.2'
    implementation 'com.github.yuriy-budiyev:code-scanner:2.1.0'
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.core:core-ktx:1.15.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.0.21'
    implementation 'androidx.activity:activity-ktx:1.9.3'
    implementation 'androidx.cardview:cardview:1.0.0'
}

tasks.register('copy_language_pack', Copy) {
    description 'Copy the language pack to the source directory, replace the placeholder file'
    from 'language_pack/'
    into 'src/main/res/'
    exclude '**/README.md'
    include '**/*'
}
